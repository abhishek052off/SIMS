@using SIMSWeb.Model.Models
@using SIMSWeb.Model.ViewModels

@{
    ViewData["Title"] = "My Profile";
}

@model StudentProfile;

@{
    <style>
        .progress-card {
            border: 2px solid #ddd;
            border-radius: 8px;
            margin: 20px;
            padding: 15px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
    </style>
}

<div class="container">
    <div class="row g-3">
        <div class="col-md-3">
            @{
                var metricModel = new MetricsViewModel
                {
                    Label = "Active Enrolled Courses",
                    Value = Model.StudentProfileMetrics?.ActiveCourses ?? 0,
                    BgColor = "bg-success-subtle border-success",
                    ActionName = "ManageCourses",
                    ControllerName = "Course"
                };
                <partial name="_MetricsViewPartial" model="@metricModel" />
            }
        </div>
        <div class="col-md-3">
            @{
                var metricAssignmentModel = new MetricsViewModel
                {
                    Label = "Active Assignments",
                    Value = Model.StudentProfileMetrics?.ActiveAssignments ?? 0,
                    BgColor = "bg-info-subtle border-info",
                    ActionName = "ManageCourses",
                    ControllerName = "Course"
                };
                <partial name="_MetricsViewPartial" model="@metricAssignmentModel" />
            }
        </div>
        <div class="col-md-3">
            @{
                var metricCompletedAssignmentModel = new MetricsViewModel
                {
                    Label = "Completed Assignments",
                    Value = Model.StudentProfileMetrics?.CompletedAssignmentsCount ?? 0,
                    BgColor = "bg-info-subtle border-info",
                };
                <partial name="_MetricsViewPartial" model="@metricCompletedAssignmentModel" />
            }
        </div>
        <div class="col-md-3">
            @{
                var metricMaxMarksModel = new MetricsViewModel
                {
                    Label = "Maximum Score",
                    Value = Model.StudentProfileMetrics?.MaximumMarks ?? 0,
                    BgColor = "bg-info-subtle border-info",
                };
                <partial name="_MetricsViewPartial" model="@metricMaxMarksModel" />
            }
        </div>
    </div>
    <!-- #Personal details -->
    <partial name="_PersonalDetailsProfilePartial" model="@Model.User" />
    <!-- #endregion -->

    <div class="card mb-3">
        <div class="card-header h5 fw-bold">Enrolled Course Details</div>
        <div class="card-body">
            <div class="row">
                @if (Model.EnrolledCourses.Count > 0)
                {
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>Course Name</th>
                                    <th>Assignments</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var course in Model.EnrolledCourses)
                                {
                                    <tr>
                                        <td>@course.CourseName</td>
                                        <td>
                                            @if (course.AssignmentCreated.Count > 0)
                                            {
                                                <ul class="mb-4">
                                                    @foreach (var assignment in course.AssignmentCreated)
                                                    {
                                                        <li>
                                                            @assignment
                                                        </li>

                                                    }

                                                </ul>
                                            }
                                            else
                                            {
                                                <div class="p-3">No assignments created</div>
                                            }
                                        </td>
                                        <td>
                                            @if (course.AssignmentCreated.Count > 0)
                                            {
                                                <a target="_blank" class="text-primary text-decoration-none g-2" asp-controller="Assignment"
                                                   asp-action="ViewAssignments" asp-route-courseId="@course.Id" title="View Assignments">
                                                    View assignments
                                                </a>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {

                    var message = new NoDataViewModel
                    {
                        message = "Not enrolled in courses yet"
                    };

                    <partial name="_NoDataPartial" model="@message" />
                }
            </div>
        </div>
    </div>

    <div class="card mb-3">
        <div class="card-header h5 fw-bold">Student Progress Card</div>
        <div class="card-body">
            <div class="row">
                @if(Model.AssignmentProgress.Count > 0){
                @foreach (var progress in Model.AssignmentProgress)
                {
                    var bgColor = "bg-success-subtle";
                    var color = "text-success";

                    switch (progress.ProgressColor)
                    {
                        case "red":
                            bgColor = "bg-danger-subtle";
                            color = "text-danger";
                            break;
                        case "yellow":
                            bgColor = "bg-warning-subtle";
                            color = "text-warning";
                            break;
                        case "blue":
                            bgColor = "bg-info-subtle";
                            color = "text-info";
                            break;
                        default:
                            break;
                    }


                    <div class="col-md-4">                       
                        <div class="progress-card @bgColor">
                            <h5 class="fw-bold">@progress.CourseName</h5>
                            <p class="fw-bold">@progress.AssignmentTitle</p>
                            <p class="fs-4 @color">Score: @progress.Score / @progress.MaxScore</p>
                        </div>
                    </div>
                    }
                }
                else
                {
                    var message = new NoDataViewModel
                    {
                        message = "Progress card is not yet generated."
                    };

                    <partial name="_NoDataPartial" model="@message" />
                }
            </div>
        </div>
    </div>
</div>


